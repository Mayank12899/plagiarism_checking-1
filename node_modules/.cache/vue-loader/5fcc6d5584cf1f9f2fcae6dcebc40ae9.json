{"remainingRequest":"/home/sanfer/Documents/plagiarism_checking/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/sanfer/Documents/plagiarism_checking/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/home/sanfer/Documents/plagiarism_checking/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/sanfer/Documents/plagiarism_checking/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/sanfer/Documents/plagiarism_checking/src/views/Course.vue?vue&type=template&id=9c7d2556&","dependencies":[{"path":"/home/sanfer/Documents/plagiarism_checking/src/views/Course.vue","mtime":1591773360644},{"path":"/home/sanfer/Documents/plagiarism_checking/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sanfer/Documents/plagiarism_checking/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/sanfer/Documents/plagiarism_checking/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/home/sanfer/Documents/plagiarism_checking/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sanfer/Documents/plagiarism_checking/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}